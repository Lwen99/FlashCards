@model List<CardDto>
@{
    int currentIndex = 0; // Start with the first card
}

<h1>Review Session</h1>

<a asp-controller="Stack" asp-action="Stack" class="btn btn-primary">
    Back to Stack

</a>

<div class="flashcard" style="width: 800px; height: 600px; position: relative; margin: auto;">
    <div class="card-inner btn" onclick="flipCard()" id="card-inner" style="position: absolute; width: 100%; height: 100%;">
        <div class="card-front" style="background-color: lightblue; height: 100%; width: 100%; display: flex; justify-content: center; align-items: center; border: 1px solid #000; border-radius: 10px;">
            <h2 id="question">@Model[currentIndex].Question</h2>
        </div>
        <div class="card-back" style="background-color: lightcoral; height: 100%; width: 100%; display: flex; justify-content: center; align-items: center; border: 1px solid #000; border-radius: 10px;">
            <h2 id="answer">@Model[currentIndex].Answer</h2>
        </div>
    </div>
</div>

<div  style="text-align: center; margin-top: 20px">
    <button style=" width:100px; height:50px" onclick="showPrevCard()">Previous</button>
    <button style=" width:100px; height:50px"  onclick="showNextCard()">Next</button>
</div>



<script>
    let currentIndex = 0;
    const cards = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)); // Serialize model to JavaScript
    let isFlipped = false;

    function showCard(index) {
        document.getElementById("question").innerText = cards[index].Question;
        document.getElementById("answer").innerText = cards[index].Answer;
        // Ensure the card is unflipped when a new card is shown
        isFlipped = false;
    }

    function showNextCard() {
        if (currentIndex < cards.length - 1) {
            if (isFlipped) {
                // Unflip first, wait for transition, then show next card
                document.getElementById('card-inner').style.transform = 'rotateY(0deg)';
                document.getElementById('card-inner').addEventListener('transitionend', function handleTransition() {
                    currentIndex++;
                    showCard(currentIndex);
                    document.getElementById('card-inner').removeEventListener('transitionend', handleTransition);
                });
            } else {
                currentIndex++;
                showCard(currentIndex);
            }
        } else {
            alert("No more cards!");
        }
    }

    function showPrevCard() {
        if (currentIndex > 0) {
            if (isFlipped) {
                // Unflip first, wait for transition, then show previous card
                document.getElementById('card-inner').style.transform = 'rotateY(0deg)';
                document.getElementById('card-inner').addEventListener('transitionend', function handleTransition() {
                    currentIndex--;
                    showCard(currentIndex);
                    document.getElementById('card-inner').removeEventListener('transitionend', handleTransition);
                });
            } else {
                currentIndex--;
                showCard(currentIndex);
            }
        } else {
            alert("This is the first card!");
        }
    }

    function flipCard() {
        if (isFlipped) {
            document.getElementById('card-inner').style.transform = 'rotateY(0deg)';
        } else {
            document.getElementById('card-inner').style.transform = 'rotateY(180deg)';
        }
        isFlipped = !isFlipped;
    }
</script>

<style>
    .flashcard {
        perspective: 1000px;
    }

    .card-inner {
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

    .card-back {
        backface-visibility: hidden;
    }

    .card-back {
        position: absolute;
        top: 0;
        left: 0;
        transform: rotateY(180deg);
    }
</style>
